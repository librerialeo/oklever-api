package rest

import (
	"github.com/fasthttp/router"
	"github.com/jackc/pgx"
)

// InitRouterHandler initialize al routes
func InitRouterHandler(r *router.Router, conn *pgx.Conn) {
	chatsRouter := r.Group("/chats")
	InitChatsHandler(chatsRouter)
	ClassesCommentsRouter := r.Group("/classes_comments")
	InitClassesCommentsHandler(ClassesCommentsRouter)
	classesRouter := r.Group("/classes")
	InitClassesHandler(classesRouter)
	ClassesResourcesRouter := r.Group("/classes_resources")
	InitClassesResourcesHandler(ClassesResourcesRouter)
	countriesRouter := r.Group("/countries")
	InitCountriesHandler(countriesRouter)
	coursesDatasheetsRouter := r.Group("/courses_datasheets")
	InitCoursesDatasheetsHandler(coursesDatasheetsRouter)
	coursesForumsCommentsRouter := r.Group("/courses_forums_comments")
	InitCoursesForumsCommentsHandler(coursesForumsCommentsRouter)
	coursesForumsRouter := r.Group("/courses_forums")
	InitCoursesForumsHandler(coursesForumsRouter)
	coursesRouter := r.Group("/courses")
	InitCoursesHandler(coursesRouter)
	coursesLevelsRouter := r.Group("/courses_levels")
	InitCoursesLevelsHandler(coursesLevelsRouter)
	coursesProjectsRouter := r.Group("/courses_projects")
	InitCoursesProjectsHandler(coursesProjectsRouter)
	coursesReviewsRouter := r.Group("/courses_reviews")
	InitCoursesReviewsHandler(coursesReviewsRouter)
	degreesRouter := r.Group("/degrees")
	InitDegreesHandler(degreesRouter)
	insigniasRouter := r.Group("/insignias")
	InitInsigniasHandler(insigniasRouter)
	languagesRouter := r.Group("/languages")
	InitLanguagesHandler(languagesRouter)
	modulesFeedbackRouter := r.Group("/modules_feedback")
	InitModulesFeedbackHandler(modulesFeedbackRouter)
	modulesRouter := r.Group("/modules")
	InitModulesHandler(modulesRouter)
	modulesResourcesRouter := r.Group("/modules_resources")
	InitModulesResourcesHandler(modulesResourcesRouter)
	purchasesRouter := r.Group("/purchases")
	InitPurchasesHandler(purchasesRouter)
	purchasesProductsRouter := r.Group("/purchases_products")
	InitPurchasesProductsHandler(purchasesProductsRouter)
	questionsRouter := r.Group("/questions")
	InitQuestionsHandler(questionsRouter)
	questionsOptionsRouter := r.Group("/questions_options")
	InitQuestionsOptionsHandler(questionsOptionsRouter)
	questionsTypesRouter := r.Group("/questions_types")
	InitQuestionsTypesHandler(questionsTypesRouter)
	quizzesRouter := r.Group("/quizzes")
	InitQuizzesHandler(quizzesRouter)
	resourcesTypesRouter := r.Group("/resources_types")
	InitResourcesTypesHandler(resourcesTypesRouter)
	rolesRouter := r.Group("/roles")
	InitRolesHandler(rolesRouter)
	studentsAnswersRouter := r.Group("/students_answers")
	InitStudentsAnswersHandler(studentsAnswersRouter)
	studentsCoursesRouter := r.Group("/students_courses")
	InitStudentsCoursesHandler(studentsCoursesRouter)
	studentsRouter := r.Group("/students")
	InitStudentsHandler(studentsRouter)
	studentsProjectsRouter := r.Group("/students_projects")
	InitStudentsProjectsHandler(studentsProjectsRouter)
	studentsProjectsHistoryRouter := r.Group("/students_projects_history")
	InitStudentsProjectsHistoryHandler(studentsProjectsHistoryRouter)
	studentsQuizzesRouter := r.Group("/students_quizzes")
	InitStudentsQuizzesHandler(studentsQuizzesRouter)
	studentsSubscriptionsRouter := r.Group("/students_subscriptions")
	InitStudentsSubscriptionsHandler(studentsSubscriptionsRouter)
	subscriptionsRouter := r.Group("/subscriptions")
	InitSubscriptionsHandler(subscriptionsRouter)
	synchronousClassesRouter := r.Group("/synchronous_classes")
	InitSynchronousClassesHandler(synchronousClassesRouter)
	synchronousClassesResourcesRouter := r.Group("/synchronous_classes_resources")
	InitSynchronousClassesResourcesHandler(synchronousClassesResourcesRouter)
	teachersExpertisesRouter := r.Group("/teachers_expertises")
	InitTeachersExpertisesHandler(teachersExpertisesRouter)
	teachersRouter := r.Group("/teachers")
	InitTeachersHandler(teachersRouter)
	teachersLanguagesRouter := r.Group("/teachers_languages")
	InitTeachersLanguagesHandler(teachersLanguagesRouter)
	teachersManagementsRouter := r.Group("/teachers_managements")
	InitTeachersManagementsHandler(teachersManagementsRouter)
	teachersResearchRouter := r.Group("/teachers_research")
	InitTeachersResearchHandler(teachersResearchRouter)
	teachersTeachingRouter := r.Group("/teachers_teaching")
	InitTeachersTeachingHandler(teachersTeachingRouter)
	teachersTeachingInstitutionsRouter := r.Group("/teachers_teaching_institutions")
	InitTeachersTeachingInstitutionsHandler(teachersTeachingInstitutionsRouter)
	teachersTeachingSignaturesRouter := r.Group("/teachers_teaching_signatures")
	InitTeachersTeachingSignaturesHandler(teachersTeachingSignaturesRouter)
	testClassesFeedbackRouter := r.Group("/test_classes_feedback")
	InitTestClassesFeedbackHandler(testClassesFeedbackRouter)
	testClassesRouter := r.Group("/test_classes")
	InitTestClassesHandler(testClassesRouter)
	topicsRouter := r.Group("/topics")
	InitTopicsHandler(topicsRouter)
	topicsResourcesRouter := r.Group("/topics_resources")
	InitTopicsResourcesHandler(topicsResourcesRouter)
	usersChatsRouter := r.Group("/users_chats")
	InitUsersChatsHandler(usersChatsRouter)
	usersDegreesRouter := r.Group("/users_degrees")
	InitUsersDegreesHandler(usersDegreesRouter)
	usersRouter := r.Group("/users")
	InitUsersHandler(usersRouter)
	usersInsigniasRouter := r.Group("/users_insignias")
	InitUsersInsigniasHandler(usersInsigniasRouter)
}
